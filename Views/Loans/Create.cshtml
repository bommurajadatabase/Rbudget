@model E1.Models.LoanViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Loan</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.LoanName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoanName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoanName, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.BranchId, "BranchId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BranchId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.DistributdedAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DistributdedAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DistributdedAmount, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DistributdedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DistributdedDate, new { htmlAttributes = new { @class = "form-control", @id = "DistributdedDate" } })
                @Html.ValidationMessageFor(model => model.DistributdedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstDueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstDueDate, new { htmlAttributes = new { @class = "form-control", @id = "FirstDueDate" } })
                @Html.ValidationMessageFor(model => model.FirstDueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpeningBalance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterestPercentage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InterestPercentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InterestPercentage, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.InterestType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
                @*@Html.CheckBoxFor(m=>m.InterestType)  Simple*@
                @*@Html.RadioButton("InterestType", "false", true) Compound*@
                @*@Html.RadioButtonFor(model => model.InterestType, true, new { htmlAttributes = new { @class = "form-control" } }) Simple
                @Html.RadioButtonFor(model => model.InterestType, false, new { htmlAttributes = new { @class = "form-control" } }) Compound
                @Html.ValidationMessageFor(model => model.InterestType, "", new { @class = "text-danger" })*@
            @*</div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.EMIAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMIAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMIAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CashFlow, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.CashFlow, true, new { htmlAttributes = new { @class = "form-control" } }) In
                @Html.RadioButtonFor(model => model.CashFlow, false, new { htmlAttributes = new { @class = "form-control" } }) Out
                @Html.ValidationMessageFor(model => model.CashFlow, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.StartDueNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDueNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDueNumber, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.NoOfDues, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfDues, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoOfDues, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepaymentTypeId, "RepaymentTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RepaymentTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RepaymentTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    $(document).ready(function () {


        $('#BranchId').change(function () {
            $.ajax({
                type: "post",
                url: "/Loans/GetCustomers",
                data: { BranchId: $('#BranchId').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var customers = "<select id='CustomerId'>";
                    customers = customers + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        customers = customers + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    customers = customers + '</select>';
                    $('#CustomerId').html(customers);
                }
            });
        });

        $("#DistributdedDate").datepicker({

            dateFormat: 'dd-M-yy',// 22-May-2019

            changeMonth: true,

            changeYear: true

        });
        $("#FirstDueDate").datepicker({

            dateFormat: 'dd-M-yy',// 22-May-2019

            changeMonth: true,

            changeYear: true

        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
